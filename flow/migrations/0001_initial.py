# Generated by Django 3.2.16 on 2022-12-13 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import flow.storage
import namegenerator
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restrict', models.JSONField(default=list, help_text='Restrict access to specific nodes for this diagram')),
                ('version', models.CharField(default='1.0alpha', max_length=100)),
                ('name', models.CharField(default=namegenerator.gen, max_length=100, null=True)),
                ('nodes', models.JSONField(blank=True, default=list, null=True)),
                ('edges', models.JSONField(blank=True, default=list, null=True)),
                ('graph', models.JSONField(blank=True, null=True)),
                ('hash', models.CharField(default=uuid.uuid4, max_length=4000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('screenshot', models.ImageField(null=True, storage=flow.storage.PrivateMediaStorage(), upload_to='')),
                ('description', models.CharField(blank=True, default='Add a Desssscription', max_length=50000, null=True)),
                ('brittle', models.BooleanField(default=False, help_text='Is this a brittle flow? aka. should the flow fail on any exception?')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReactiveTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('implementation', models.CharField(choices=[('ZIP', 'ZIP (Zip the data)'), ('COMBINELATEST', 'COMBINELATEST (Combine values with latest value from each stream)'), ('WITHLATEST', 'WITHLATEST (Combine a leading value with the latest value)'), ('BUFFER_COMPLETE', 'BUFFER_COMPLETE (Buffer values until complete is retrieved)'), ('BUFFER_UNTIL', 'BUFFER_UNTIL (Buffer values until signal is send)'), ('CHUNK', 'CHUNK (Chunk the data)'), ('SPLIT', 'SPLIT (Split the data)'), ('OMIT', 'OMIT (Omit the data)'), ('TO_LIST', 'TO_LIST (Convert to list)'), ('FOREACH', 'FOREACH (Foreach element in list)'), ('IF', 'IF (If condition is met)'), ('AND', 'AND (AND condition)')], default='ZIP', max_length=1000, unique=True)),
                ('instream', models.JSONField(blank=True, default=list, null=True)),
                ('outstream', models.JSONField(blank=True, default=list, null=True)),
                ('constream', models.JSONField(blank=True, default=list, null=True)),
                ('defaults', models.JSONField(blank=True, null=True)),
                ('constants', models.JSONField(blank=True, default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('assignation', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('flow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='flow.flow')),
            ],
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restrict', models.JSONField(default=list, help_text='Restrict access to specific nodes for this diagram')),
                ('name', models.CharField(default=namegenerator.gen, max_length=100, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('t', models.IntegerField()),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='flow.run')),
            ],
        ),
        migrations.CreateModel(
            name='RunLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.CharField(blank=True, max_length=100, null=True)),
                ('node', models.CharField(blank=True, max_length=100, null=True)),
                ('run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='flow.run')),
            ],
        ),
        migrations.CreateModel(
            name='RunEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('type', models.CharField(choices=[('NEXT', 'NEXT (Value represent Labels)'), ('ERROR', 'Error (Value represent Intensity)'), ('COMPLETE', 'COMPLETE (First three channel represent RGB)'), ('UNKNOWN', 'UNKNOWN (Value represent Intensity)')], default='UNKNOWN', max_length=1000)),
                ('t', models.IntegerField()),
                ('source', models.CharField(max_length=1000)),
                ('handle', models.CharField(max_length=1000)),
                ('value', models.JSONField(blank=True, null=True)),
                ('run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='flow.run')),
                ('snapshot', models.ManyToManyField(related_name='events', to='flow.Snapshot')),
            ],
        ),
        migrations.AddField(
            model_name='flow',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flows', to='flow.workspace'),
        ),
        migrations.AddConstraint(
            model_name='flow',
            constraint=models.UniqueConstraint(fields=('workspace', 'hash'), name='Equal Reservation on this App by this Waiter is already in place'),
        ),
    ]
